#pragma checksum "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "82bdb6aa862f19d4cf953b0d256ce38fa1bb756b"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorMatchGame.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using BlazorMatchGame;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\_Imports.razor"
using BlazorMatchGame.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
using System.Timers;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, @"<style>

	h2 {
		padding: 5px;
	}

	.row {
		justify-content: center;
	}

	.game {
		width: 400px;
		margin: auto;
		padding: 10px;
	}

	.circularbtn {
		border: none;
		width: 100px;
		height: 100px;
		font-size: 50px;
		border-radius: 200px;
		background-color: #EDE8E8;
	}

	.database {
		width: 800px;
		margin: auto;
		position: center;
		padding: 10px;
	}

	.selected {
		background-color: black;
	}

</style>

");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "class", "database");
            __builder.AddMarkupContent(3, "<div class=\"row\"><h2>Choose 8 animals:</h2></div>\r\n\t");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "row");
#nullable restore
#line 48 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
         for (var allAnim = 0; allAnim < animalDatabase.Count; allAnim++)
		{

#line default
#line hidden
#nullable disable
#nullable restore
#line 51 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
			var uniqueAnimalsToAdd = animalDatabase[allAnim];

#line default
#line hidden
#nullable disable
#nullable restore
#line 53 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
			var uniqueDBIndex = allAnim;


#line default
#line hidden
#nullable disable
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "col-1");
            __builder.OpenElement(8, "button");
            __builder.AddAttribute(9, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 58 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                                () => pushAnimalToList(uniqueAnimalsToAdd, uniqueDBIndex)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(10, "type", "button");
            __builder.AddAttribute(11, "class", "btn");
            __builder.OpenElement(12, "h1");
            __builder.AddContent(13, 
#nullable restore
#line 60 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                     animalDatabase[allAnim]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 63 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
		}

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(14, "\r\n\t");
            __builder.OpenElement(15, "div");
            __builder.AddAttribute(16, "class", "row");
            __builder.AddAttribute(17, "style", "padding:50px");
            __builder.OpenElement(18, "button");
            __builder.AddAttribute(19, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 67 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                            () => SetUpGame()

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(20, "type", "button");
            __builder.AddAttribute(21, "class", "btn btn-dark");
            __builder.AddMarkupContent(22, "<h4>Create Game</h4>");
            __builder.CloseElement();
            __builder.AddMarkupContent(23, "\r\n\t\t");
            __builder.OpenElement(24, "button");
            __builder.AddAttribute(25, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 71 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                            () => unselectAll()

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(26, "type", "button");
            __builder.AddAttribute(27, "class", "btn btn-link");
            __builder.AddMarkupContent(28, "<h5 style=\"padding:0 0 0 100px\">Reset Animals</h5>");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(29, "\r\n\r\n");
            __builder.OpenElement(30, "div");
            __builder.AddAttribute(31, "class", "game");
            __builder.OpenElement(32, "div");
            __builder.AddAttribute(33, "class", "row");
#nullable restore
#line 81 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
         for (var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
		{

#line default
#line hidden
#nullable disable
#nullable restore
#line 84 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
			var animal = shuffledAnimals[animalNumber];
			var uniqueDescription = $"Button #{animalNumber}";

#line default
#line hidden
#nullable disable
#nullable restore
#line 87 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
			var uniqueButtonIndex = animalNumber;


#line default
#line hidden
#nullable disable
            __builder.OpenElement(34, "div");
            __builder.AddAttribute(35, "class", "col-3");
            __builder.OpenElement(36, "button");
            __builder.AddAttribute(37, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 90 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                                    () => ButtonClick(animal, uniqueDescription, uniqueButtonIndex)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(38, "type", "button");
            __builder.AddAttribute(39, "class", "circularbtn");
            __builder.OpenElement(40, "h1");
            __builder.AddContent(41, 
#nullable restore
#line 93 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                         hiddenEmoji[uniqueButtonIndex]

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 96 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
		}

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(42, "\r\n\t");
            __builder.OpenElement(43, "div");
            __builder.AddAttribute(44, "class", "row");
            __builder.OpenElement(45, "h3");
            __builder.AddAttribute(46, "style", "padding:20px");
            __builder.AddContent(47, "Matches: ");
            __builder.AddContent(48, 
#nullable restore
#line 99 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                                            matchesFound

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.AddMarkupContent(49, "\r\n\t\t");
            __builder.OpenElement(50, "h3");
            __builder.AddAttribute(51, "style", "padding:20px");
            __builder.AddContent(52, "Score: ");
            __builder.AddContent(53, 
#nullable restore
#line 100 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
                                          scoreDisplay

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(54, "\r\n\t");
            __builder.OpenElement(55, "div");
            __builder.AddAttribute(56, "class", "row");
            __builder.AddAttribute(57, "style", "color: #dc3545");
            __builder.OpenElement(58, "h2");
            __builder.AddContent(59, 
#nullable restore
#line 103 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
              timeDisplay

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 107 "D:\NEU\Intermediate Programming\Week 1\BlazorMatchGame_draft\BlazorMatchGame\Pages\Index.razor"
       
	/*****for TASK B ✅
	Provide multiple options of animal emoji so the player can choose 
	8 animals and then start the game with them */

	List<string> mainAnimalDatabase = new List<string>() //create a database with 24 options of animal emojis (B)
	{
		"🐶", "🐺",
		"🐱", "🐼",
		"🐻", "🐮",
		"🐯", "🐹",
		"🐷", "🦊",
		"🐗", "🦝",
		"🦎", "🐠",
		"🐰", "🦄",
		"🐜", "🦋",
		"🐌", "🦩",
		"🦜", "🦢",
		"🐥", "🦈",
	};

	protected override void OnInitialized() // when the webpage loads do this
	{
		animalDatabase = mainAnimalDatabase.ToList();
		timer = new Timer(100);
		timer.Elapsed += Timer_Tick;
	}


	//Strings for animals
	List<string> animalDatabase = new List<string>(); // temporary string to store animal database
	List<string> animalEmoji = new List<string>(); //create an empty list of string in which the chosen animals can be pushed (B)


	private void pushAnimalToList(string animalToAdd, int DBIndex) // This function is called everytime the player clicks on a animal(B)
	{
		if (animalEmoji.Count < 16) // player can not choose on more than 8 animals (B)
		{
			animalEmoji.Add(animalToAdd);
			animalEmoji.Add(animalToAdd); // one chosen animal pushed twice to have pairs for the game. (B)
			animalDatabase[DBIndex] = ""; // to make sure the same animal is not clicked twice, the animal is removed on click. (B)
		}
	}

	private void unselectAll() // reset the chosen animals. This was an additional think I added along with Task B to make it replayable. However it has a bug and haven't figure out how to solve it (B)
	{
		animalDatabase.Clear(); // clears the temporary database string.
		animalDatabase = mainAnimalDatabase.ToList(); // fill the temporary database string with animals again
		animalEmoji.Clear();
		shuffledAnimals.Clear();// clear 
		timer.Stop(); // stop the timer
	}


	List<string> shuffledAnimals = new List<string>();

	/****** For TASK C ✅
	Memory Game: The buttons begin with ?. On click button is visible and remains open until the next one is checked.
	If the next button matches, both buttons should stay open for 1 second then emptied out.
	If next button is incorrect, they go back to ?. */

	List<string> hiddenEmoji = new List<string>() // Make a list with ? Emoji. (C)
	{
		"❔", "❔",
		"❔", "❔",
		"❔", "❔",
		"❔", "❔",
		"❔", "❔",
		"❔", "❔",
		"❔", "❔",
		"❔", "❔"
	};

	private void SetUpGame()
	{
		scoreDisplay = 0;
		Random random = new Random(); // randomize the positions of all animals on the list.
		shuffledAnimals = animalEmoji
			.OrderBy(item => random.Next())
			.ToList();

		matchesFound = 0; // reset matches to zero (A)

		tenthOfSecondsElapsed = 0; // reset time

		for (var i = 0; i < hiddenEmoji.Count; i++)
		{
			hiddenEmoji[i] = "❔"; // this is to make sure all animals are "❔" when beginning the game. (C)
		}
	}

	/***** 
	*	
	*
	THE MAIN GAME SETUP 
	*
	*
	*****/

	string lastAnimalFound = string.Empty; // variable to keep track of previous animal clicked
	string lastDescription = string.Empty;
	int lastButtonIndex;
	int matchesFound = 0;
	Timer timer;
	int tenthOfSecondsElapsed = 0;
	string timeDisplay;

	/***** for TASK A ✅
	Change the game so that the player scores 10 point for every correct match and loses 2 points for every wrong match
	*****/
	int scoreDisplay = 0; // created to track score of the matches successfully made. (A)

	private void hideAnimalsAgain(int buttonIndex, int lastButtonIndex)
	{
		hiddenEmoji[buttonIndex] = "❔"; //(C)
		hiddenEmoji[lastButtonIndex] = "❔"; //(C)
	}

	private void removeAnimals(int buttonIndex, int lastButtonIndex)
	{

		shuffledAnimals[buttonIndex] = string.Empty;
		shuffledAnimals[lastButtonIndex] = string.Empty;

		hiddenEmoji[buttonIndex] = string.Empty;
		hiddenEmoji[lastButtonIndex] = string.Empty;
	}

	// before this function is called, the buttonHeading is empty. (C)
	private void ButtonClick(string animal, string animalDescription, int buttonIndex)
	{

		if (lastAnimalFound == string.Empty) // first click
		{
			// if lastAnimalFound is " ", then buttonIndex is animal. (C)

			hiddenEmoji[buttonIndex] = animal;

			lastAnimalFound = animal;
			lastDescription = animalDescription;
			lastButtonIndex = buttonIndex;

			timer.Start(); // the timer begins

		}
		else if ((lastAnimalFound == animal) && (animalDescription != lastDescription)) // if second click and it matches the first
		{
			hiddenEmoji[buttonIndex] = animal; // display the animal
			Task.Delay(1000).ContinueWith(t => removeAnimals(buttonIndex, lastButtonIndex)); // After 1 second remove the correct animals. (C)

			lastAnimalFound = string.Empty;

			matchesFound++;
			scoreDisplay = scoreDisplay + 10; // add to the score by 1 on correct match (A)

			if (matchesFound == 8) // if matches found amount to 8, the timer stops and game is reset.
			{
				timer.Stop();
				timeDisplay += " - Good Job!";
				SetUpGame();
			}

		}
		else
		{
			hiddenEmoji[buttonIndex] = animal;
			Task.Delay(1000).ContinueWith(t => hideAnimalsAgain(buttonIndex, lastButtonIndex)); // After 1 second make the buttonName disappear. (C)

			lastAnimalFound = string.Empty;
			//lastButtonIndex = -1;

			if (animalDescription != lastDescription) // this statement is added to make sure the score does not reduce, if the same button is clicked again.
			{
				scoreDisplay = scoreDisplay - 2; // reduce the score by 1 for incorrect match (A)
			}
		}
	}

	private void Timer_Tick(Object source, ElapsedEventArgs e)
	{
		InvokeAsync(() =>
		{
			tenthOfSecondsElapsed++;
			timeDisplay = (tenthOfSecondsElapsed / 10F)
				.ToString("0.0s");
			StateHasChanged();
		});
	}


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
